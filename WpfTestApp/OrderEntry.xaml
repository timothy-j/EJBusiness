<UserControl
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:WpfTestApp"
      xmlns:EJData="clr-namespace:EJData;assembly=EJData" 
      xmlns:ctrl="clr-namespace:WpfControls;assembly=WpfControls" x:Class="OrderEntry"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <CollectionViewSource x:Key="OrderViewSource" d:DesignSource="{d:DesignInstance {x:Type EJData:CustomerOrder}, CreateList=True}"/>
        <CollectionViewSource x:Key="OrderOrderDetailsViewSource" Source="{Binding OrderDetails, Source={StaticResource OrderViewSource}}" 
                              d:DesignSource="{d:DesignInstance {x:Type EJData:CustOrderDetail}, CreateList=True}"/>
        <Menu x:Key="NavigationMenu">
            <MenuItem Header="Navigation">
                <!--<MenuItem Command="NavigationCommands." />-->
                <MenuItem Command="ApplicationCommands.Copy" />
                <MenuItem Command="ApplicationCommands.Paste" />
                <MenuItem Command="ApplicationCommands.SelectAll" />
            </MenuItem>
        </Menu>
    </UserControl.Resources>
    <UserControl.CommandBindings>
        <CommandBinding Command="ctrl:NavigationBar.NextRoutedCommand" Executed="NextCommand_Executed"/>
        <CommandBinding Command="ctrl:NavigationBar.PreviousRoutedCommand" Executed="PreviousCommand_Executed"/>
        <CommandBinding Command="ctrl:NavigationBar.LastRoutedCommand" Executed="LastCommand_Executed"/>
        <CommandBinding Command="ctrl:NavigationBar.FirstRoutedCommand" Executed="FirstCommand_Executed"/>
        <CommandBinding Command="ctrl:NavigationBar.NewRoutedCommand" Executed="NewCommand_Executed"/>
    </UserControl.CommandBindings>
    <Grid Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" DataContext="{StaticResource OrderViewSource}" Margin="3" >
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBox x:Name="StartTextTextBox" Height="Auto" Text="{Binding StartText, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Margin="3" TextWrapping="Wrap" AcceptsReturn="True"/>
            <DataGrid x:Name="OrderDetailsDataGrid" Grid.Row="1" ItemsSource="{Binding Source={StaticResource OrderOrderDetailsViewSource}}" 
                      AutoGenerateColumns="False" EnableRowVirtualization="True" Margin="3" RowDetailsVisibilityMode="VisibleWhenSelected"
                      IsReadOnly="{Binding Sent}" CommandManager.PreviewCanExecute="OrderDetailsDataGrid_PreviewCanExecute">
                <DataGrid.Columns>
                    <DataGridTextColumn x:Name="QuantityColumn" Binding="{Binding Qty, StringFormat=\{0:G8\}}" Header="Quantity" MinWidth="50"/>
                    <DataGridTextColumn x:Name="UnitColumn" Binding="{Binding Unit}" Header="Unit" MinWidth="70"/>
                    <!---->
                    <DataGridTextColumn Header="Part" Binding="{Binding Part1.PartNo}" MinWidth="70"/>
                    <DataGridTextColumn x:Name="DescriptionColumn" Binding="{Binding Description}" Header="Description" MinWidth="150"/>
                    <DataGridTextColumn x:Name="UnitPriceColumn" Binding="{Binding Price, StringFormat=\{0:C2\}}" Header="UnitPrice" MinWidth="55"/>
                    <DataGridTextColumn x:Name="PriceColumn" Binding="{Binding Price, StringFormat=\{0:C2\}}" Header="Price" MinWidth="55"/>
                </DataGrid.Columns>
            </DataGrid>
            <TextBox x:Name="EndTextTextBox" Grid.Row="2" Height="Auto" Text="{Binding EndText, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Margin="3" AcceptsReturn="True" TextWrapping="Wrap"/>

        </Grid>
        <Grid x:Name="Grid1" HorizontalAlignment="Left" Margin="3,3,0,0" VerticalAlignment="Top" Height="Auto" Width="Auto">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="200"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Label Content="Date:" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
            <DatePicker x:Name="DateDatePicker" Grid.Column="1" HorizontalAlignment="Left" Margin="3" Grid.Row="0" SelectedDate="{Binding Date, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center"/>
            <Label Content="Due:" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
            <DatePicker x:Name="DueDatePicker" Grid.Column="1" HorizontalAlignment="Left" Margin="3" Grid.Row="1" SelectedDate="{Binding Due, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center"/>
            <Label Content="Full Name Address:" HorizontalAlignment="Left" Margin="3" Grid.Row="9" VerticalAlignment="Top"/>
            <TextBox x:Name="FullNameAddressTextBox" Grid.Column="1" Height="100" MinHeight="23" Margin="3" Grid.Row="9" Text="{Binding FullNameAddress, Mode=OneWay}" VerticalAlignment="Center" MaxLines="6" IsReadOnly="True"/>
            <Label Content="Notes:" HorizontalAlignment="Left" Margin="3" Grid.Row="10" VerticalAlignment="Top"/>
            <TextBox x:Name="NotesTextBox" Grid.Column="1" Height="Auto" MinHeight="23" MaxHeight="200" Margin="3" Grid.Row="10" Text="{Binding Notes, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" AcceptsReturn="True" ScrollViewer.CanContentScroll="True" VerticalScrollBarVisibility="Auto" TextWrapping="Wrap"/>
            <Label Content="Order No:" HorizontalAlignment="Left" Margin="3" Grid.Row="5" VerticalAlignment="Center"/>
            <TextBox x:Name="OrderNoTextBox" Grid.Column="1" HorizontalAlignment="Left" Margin="3" Grid.Row="5" Text="{Binding OrderNo, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" FontSize="18" Foreground="Blue"/>
            <Label Content="Received:" HorizontalAlignment="Left" Margin="3" Grid.Row="6" VerticalAlignment="Center"/>
            <CheckBox x:Name="ReceivedCheckBox" Content="" Grid.Column="1" HorizontalAlignment="Left" IsChecked="{Binding Received, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="3" Grid.Row="6" VerticalAlignment="Center"/>
            <Label Content="Sent:" HorizontalAlignment="Left" Margin="3" Grid.Row="7" VerticalAlignment="Center"/>
            <CheckBox x:Name="SentCheckBox" Content="" Grid.Column="1" HorizontalAlignment="Left" IsChecked="{Binding Sent, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Margin="3" Grid.Row="7" VerticalAlignment="Center"/>
            <TextBox x:Name="SuffixTextBox" Grid.Column="1" Margin="128,3,3,3" Grid.Row="5" Text="{Binding Suffix, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" FontSize="18"/>
            <Label Content="Supplier:" HorizontalAlignment="Left" Margin="3" Grid.Row="8" VerticalAlignment="Center"/>
            <TextBox x:Name="SupplierTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="8" Text="{Binding Supplier, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
        </Grid>
        <Button Content="View Order" HorizontalAlignment="Left" Margin="3" VerticalAlignment="Bottom" Width="75" Click="ViewOrder_Click"/>

         <ctrl:NavigationBar DataContext="{StaticResource OrderViewSource}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Grid.Row="1" Height="22" Width="Auto"/>
   </Grid>
</UserControl>
